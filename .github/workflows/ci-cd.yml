name: CI/CD Pipeline for Django App

on:
  push:
    branches:
      - main  # Trigger the pipeline when pushing to the main branch
  pull_request:
    branches:
      - main  # Trigger the pipeline on pull requests

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
       docker build --build-arg --no-cache DJANGO_ENV_FILE="${{ secrets.DJANGO_ENV_FILE }}" -t django-app .

    - name: Run Django tests
      run: |
        docker run --rm django-app python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This job runs after the build job

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install sshpass
      run: sudo apt-get install sshpass

    - name: Copy .env file to EC2 (if needed)
      run: |
        echo "${{ secrets.DJANGO_ENV_FILE }}" > .env  # Add your .env file content via GitHub secrets

    - name: Deploy to EC2 via password authentication
      run: |
        sshpass -p "${{ secrets.EC2_PASSWORD }}" ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_IP }} << EOF
          # Navigate to the application directory
          cd app/

          # Clone the Git repository if it's not already there
          if [ ! -d .git ]; then
            git clone https://github.com/phantom-nitro/django-client-latency.git 
          else
            git pull origin main
          fi
          cd django-client-latency
          # Optionally copy the .env file to the server
          echo "${{ secrets.DJANGO_ENV_FILE }}" > .env  # If you use .env files for configuration
          
          # Build the Docker image and restart the container
          docker build --no-cache -t django-app .
          docker stop django-app || true  # Stop the previous container if it's running
          docker rm django-app || true    # Remove the old container
          docker run -d -p 8000:8000 --name django-app django-app
        EOF

    - name: Clean up
      run: |
        rm -f .env
